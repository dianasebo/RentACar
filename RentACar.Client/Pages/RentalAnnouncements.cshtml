@page "/search"
@using RentACar.Shared.Models
@using System.Net.Http.Headers
@inject HttpClient Http
@inject Blazor.Extensions.Storage.SessionStorage SessionStorage
@inject Microsoft.AspNetCore.Blazor.Services.IUriHelper UriHelper

<div class="field-container search-page-background">

    <div class="form-group">
        <label for="brand"> Brand: </label>
        <input type="text" name="brand" class="form-control format" bind="@UserInput.Brand" />
    </div>

    <div class="form-group">
        <label for="model"> Model: </label>
        <input type="text" name="model" class="form-control format" bind="@UserInput.Model" />
    </div>

    <div class="form-group">
        <label for="engine" class="control-label">Engine: </label>
        <select class="form-control format" onchange="@OnEngineSelect">
            <option value="">-- Select Engine Type --</option>
            @foreach (var engineType in Enum.GetValues(typeof(EngineType)))
            {
                <option value="@engineType">@engineType</option>
            }
        </select>
    </div>

    <div class="form-group">
        <label for="year"> Year: </label>
        <input type="text" name="year" class="form-control format" bind="@UserInput.Year" />
    </div>

    <div class="form-group">
        <label for="city"> City: </label>
        <input type="text" name="city" class="form-control format" bind="@UserInput.City" />
    </div>

    <div class="form-group">
        <label for="from"> From: </label>
        <input type="date" name="from" class="form-control format" bind="@UserInput.From" format-value="yyyy-MM-dd" value="" />

        <label for="to"> To: </label>
        <input type="date" name="from" class="form-control format" bind="@UserInput.To" format-value="yyyy-MM-dd" value="" />
    </div>

    <div class="form-group">
        <button type="button" class="btn btn-default" onclick="@Search">Search</button>
        <button class="btn" onclick="">Cancel</button>
    </div>
</div>

<div class="results">

    @if (ListOfResultedCars != null)
    {
        int count = 0;
        @foreach (Car car in ListOfResultedCars)
        {
            count++;
            <article class="result">
                <p>@count. @car.Brand - @car.Model  - @car.Engine - @car.Year</p>
            </article>
        }
    }
</div>



@functions
{
UserInput UserInput { get; set; } = new UserInput();
IEnumerable<Car> ListOfResultedCars { get; set; } = new List<Car>();

protected void OnEngineSelect(UIChangeEventArgs engineChangeEvent)
{
    EngineType engine;
    if (Enum.TryParse<EngineType>(engineChangeEvent.Value.ToString(), out engine))
        UserInput.Engine = engine;
    else
        UserInput.Engine = null;
}

protected async void Search()
{
    string token = await SessionStorage.GetItem<string>("token");
    Http.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", token);
    try
    {
        ListOfResultedCars = await Http.PostJsonAsync<IEnumerable<Car>>("api/Cars/Search", UserInput);
    }
    catch (Exception e)
    {
        UriHelper.NavigateTo("/login");
    }
    this.StateHasChanged();
}
}